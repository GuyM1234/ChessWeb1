{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"C:/Users/user/Desktop/Computer_Science/ChessWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/user/Desktop/Computer_Science/ChessWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/user/Desktop/Computer_Science/ChessWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/user/Desktop/Computer_Science/ChessWeb1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Board from\"./Components/Board\";import{Game}from\"./Components/Game\";import SpotInOptions from\"./Components/Methods\";import Timer from\"./Components/Timer\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.handleClick=function(piece){var row=piece.spot[0];var column=piece.spot[1];_this.setState(function(prevState){if(_this.state.piece==null){if(_this.state.game.turn===piece.color){var move_options=piece.getAvaliableMoves(prevState.game);if(move_options.length>0){return{piece:piece,move_options:move_options};}}}else{if(SpotInOptions(piece.spot,_this.state.move_options)){prevState.game.board[prevState.piece.spot[0]][prevState.piece.spot[1]].move([row,column],_this.state.game);prevState.game.updateTurn();}return{piece:null,game:prevState.game,move_options:[],status:_this.updateStatus(prevState.game)};}});};_this.updateStatus=function(){if(_this.state.game.isCheck()){if(_this.state.game.isCheckMate()){return\"CHECKMATE!\";}else{return\"CHECK!\";}}else if(_this.state.game.isPat()){return\"PAT!\";}else{return\" \";}};_this.state={piece:null,game:new Game(),move_options:[],status:\"\"};return _this;}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"game\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"status\",children:this.state.status}),/*#__PURE__*/_jsx(Board,{board:this.state.game.board,move_options:this.state.move_options,handleClick:this.handleClick}),/*#__PURE__*/_jsxs(\"div\",{className:\"timers\",children:[/*#__PURE__*/_jsx(Timer,{color:\"b\",turn:this.state.game.turn}),/*#__PURE__*/_jsx(Timer,{color:\"w\",turn:this.state.game.turn})]})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb1/src/App.js"],"names":["React","Board","Game","SpotInOptions","Timer","App","handleClick","piece","row","spot","column","setState","prevState","state","game","turn","color","move_options","getAvaliableMoves","length","board","move","updateTurn","status","updateStatus","isCheck","isCheckMate","isPat","Component"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport Board from \"./Components/Board\"\r\nimport { Game } from \"./Components/Game\";\r\nimport SpotInOptions from \"./Components/Methods\"\r\nimport Timer from \"./Components/Timer\"\r\n\r\nclass App extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      piece: null,\r\n      game: new Game(),\r\n      move_options: [],\r\n      status: \"\",\r\n\r\n    }\r\n  }\r\n\r\n  handleClick = (piece) => {\r\n    const row = piece.spot[0]\r\n    const column = piece.spot[1]\r\n    this.setState(prevState => {\r\n      if (this.state.piece == null) {\r\n        if (this.state.game.turn === piece.color) {\r\n          const move_options = piece.getAvaliableMoves(prevState.game)\r\n          if (move_options.length > 0) { \r\n            return {piece: piece, move_options: move_options}\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        \r\n        if (SpotInOptions(piece.spot, this.state.move_options)) {\r\n          prevState.game.board[prevState.piece.spot[0]][prevState.piece.spot[1]].move([row,column],this.state.game)\r\n          prevState.game.updateTurn()\r\n        }\r\n        return {piece: null, game: prevState.game, move_options: [], status: this.updateStatus(prevState.game)}\r\n      }\r\n    })\r\n  }\r\n\r\n  updateStatus = () => {\r\n    if (this.state.game.isCheck()) {\r\n      if (this.state.game.isCheckMate()) {\r\n        return \"CHECKMATE!\"\r\n      }\r\n      else{\r\n        return \"CHECK!\"\r\n      }\r\n    }\r\n    else if (this.state.game.isPat()){\r\n      return \"PAT!\"\r\n    }\r\n    else{\r\n      return \" \"\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <div className=\"game\">\r\n        <h1 className=\"status\">{this.state.status}</h1>\r\n        <Board board = {this.state.game.board} move_options = {this.state.move_options} handleClick = {this.handleClick}/>\r\n        <div className=\"timers\">\r\n          <Timer color = 'b' turn = {this.state.game.turn}/>\r\n          <Timer color = 'w' turn = {this.state.game.turn}/>\r\n        </div>\r\n      </div>\r\n     \r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}