{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb1\\\\src\\\\Components\\\\Board.js\";\nimport React from \"react\";\nimport Block from \"./Block\";\nimport { Game } from \"./Game\";\n\nclass Board extends React.Component {\n  constructor() {\n    super();\n\n    this.IsSpotInOptions = (spot, move_options) => {\n      for (let index = 0; index < move_options.length; index++) {\n        const element = move_options[index];\n\n        if (element[0] === spot[0] && element[1] === spot[1]) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.state = {\n      board: this.props.board\n    };\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.piece !== this.props.piece) {\n      this.setState({\n        board: nextProps.board\n      });\n      return true;\n    }\n\n    if (nextProps.isOption !== this.props.isOption) {\n      this.isOption = nextProps.isOption;\n      change = true;\n    }\n\n    return change;\n  }\n\n  render() {\n    const graphicBoard = this.state.board.map(row => row.map(piece => /*#__PURE__*/_jsxDEV(Block, {\n      piece: piece,\n      handleClick: this.handleClick,\n      isOption: this.IsSpotInOptions(piece.spot, this.state.move_options)\n    }, piece.spot, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 76\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: graphicBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb1/src/Components/Board.js"],"names":["React","Block","Game","Board","Component","constructor","IsSpotInOptions","spot","move_options","index","length","element","state","board","props","shouldComponentUpdate","nextProps","piece","setState","isOption","change","render","graphicBoard","map","row","handleClick"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,GAAI;AACX;;AADW,SAoBbC,eApBa,GAoBK,CAACC,IAAD,EAAMC,YAAN,KAAuB;AACvC,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,YAAY,CAACE,MAAzC,EAAiDD,KAAK,EAAtD,EAA0D;AACxD,cAAME,OAAO,GAAGH,YAAY,CAACC,KAAD,CAA5B;;AACA,YAAIE,OAAO,CAAC,CAAD,CAAP,KAAeJ,IAAI,CAAC,CAAD,CAAnB,IAA0BI,OAAO,CAAC,CAAD,CAAP,KAAeJ,IAAI,CAAC,CAAD,CAAjD,EAAsD;AACpD,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD,KA5BY;;AAEX,SAAKK,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD;AADP,KAAb;AAGH;;AAGDE,EAAAA,qBAAqB,CAAEC,SAAF,EAAa;AAChC,QAAIA,SAAS,CAACC,KAAV,KAAoB,KAAKH,KAAL,CAAWG,KAAnC,EAA2C;AACvC,WAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEG,SAAS,CAACH;AAAlB,OAAd;AACA,aAAO,IAAP;AACH;;AACD,QAAIG,SAAS,CAACG,QAAV,KAAuB,KAAKL,KAAL,CAAWK,QAAtC,EAAgD;AAC5C,WAAKA,QAAL,GAAgBH,SAAS,CAACG,QAA1B;AACAC,MAAAA,MAAM,GAAG,IAAT;AACH;;AACD,WAAOA,MAAP;AACD;;AAaCC,EAAAA,MAAM,GAAI;AACR,UAAMC,YAAY,GAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAqBC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQN,KAAK,iBAAI,QAAC,KAAD;AAA0B,MAAA,KAAK,EAAIA,KAAnC;AAA0C,MAAA,WAAW,EAAI,KAAKQ,WAA9D;AAA2E,MAAA,QAAQ,EAAI,KAAKnB,eAAL,CAAqBW,KAAK,CAACV,IAA3B,EAAgC,KAAKK,KAAL,CAAWJ,YAA3C;AAAvF,OAAcS,KAAK,CAACV,IAApB;AAAA;AAAA;AAAA;AAAA,YAAjB,CAA5B,CAAtB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACKe;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKD;;AAvC6B;;AAyCpC,eAAenB,KAAf","sourcesContent":["import React from \"react\";\r\nimport Block from \"./Block\"\r\nimport { Game } from \"./Game\";\r\n\r\nclass Board extends React.Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n          board: this.props.board\r\n        }\r\n    }\r\n\r\n    \r\n    shouldComponentUpdate (nextProps) {\r\n      if (nextProps.piece !== this.props.piece)  {\r\n          this.setState({board: nextProps.board})\r\n          return true\r\n      }\r\n      if (nextProps.isOption !== this.props.isOption) {\r\n          this.isOption = nextProps.isOption\r\n          change = true\r\n      }\r\n      return change\r\n    }\r\n\r\n      IsSpotInOptions = (spot,move_options) => {\r\n        for (let index = 0; index < move_options.length; index++) {\r\n          const element = move_options[index];\r\n          if (element[0] === spot[0] && element[1] === spot[1]) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      }\r\n    \r\n\r\n      render () {\r\n        const graphicBoard =  this.state.board.map(row => row.map(piece => <Block key = {piece.spot} piece = {piece} handleClick = {this.handleClick} isOption = {this.IsSpotInOptions(piece.spot,this.state.move_options)}/>))\r\n        return (\r\n            <div className=\"board\">\r\n                {graphicBoard}\r\n            </div> \r\n        )\r\n      }  \r\n}\r\nexport default Board"]},"metadata":{},"sourceType":"module"}