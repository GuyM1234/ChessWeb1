{"ast":null,"code":"import { Piece, Pawn, Rook, Bishop } from \"./pieces\";\n\nclass GameBoard {\n  constructor() {\n    this.board = this.createBoard();\n  }\n\n  createBoard() {\n    const board = [];\n\n    for (let rowindex = 0; rowindex < 8; rowindex++) {\n      const row = [];\n\n      for (let columnindex = 0; columnindex < 8; columnindex++) {\n        let p = new Piece([rowindex, columnindex], '0', 'e', \"\");\n        row.push(p);\n      }\n\n      board.push(row);\n    }\n\n    board[6] = board[6].map((x, index) => new Pawn([6, index], 'P', 'w', \"WhitePawn.png\"));\n    board[1] = board[1].map((x, index) => new Pawn([1, index], 'P', 'b', \"BlackPawn.png\")); // board_imgs[7][4] = \"WhiteKing.png\"\n    // board_imgs[7][3] = \"WhiteQueen.png\"\n    // board_imgs[7][0] = \"WhiteRook.png\"\n    // board_imgs[7][7] = \"WhiteRook.png\"\n    // board_imgs[7][2] = \"WhiteBishop.png\"\n    // board_imgs[7][5] = \"WhiteBishop.png\"\n    // board_imgs[7][1] = \"WhiteKnight.png\"\n    // board_imgs[7][6] = \"WhiteKnight.png\"\n    // board_imgs[0][4] = \"BlackKing.png\"\n    // board_imgs[0][3] = \"BlackQueen.png\"\n    // board_imgs[0][0] = \"BlackRook.png\"\n    // board_imgs[0][7] = \"BlackRook.png\"\n    // board_imgs[0][2] = \"BlackBishop.png\"\n    // board_imgs[0][5] = \"BlackBishop.png\"\n    // board_imgs[0][1] = \"BlackKnight.png\"\n    // board_imgs[0][6] = \"BlackKnight.png\"\n\n    board[7][0] = new Rook([7, 0], 'R', 'w', \"WhiteRook.png\");\n    board[7][7] = new Rook([7, 7], 'R', 'w', \"WhiteRook.png\");\n    board[0][0] = new Rook([0, 0], 'R', 'b', \"BlackRook.png\");\n    board[0][7] = new Rook([0, 7], 'R', 'b', \"BlackRook.png\");\n    board[7][2] = new Bishop([7, 2], 'B', 'w', \"WhiteBishop.png\");\n    board[7][5] = new Bishop([7, 5], 'B', 'w', \"WhiteBishop.png\");\n    board[0][2] = new Bishop([0, 2], 'B', 'B', \"BlackBishop.png\");\n    board[0][2] = new Bishop([0, 2], 'B', 'B', \"BlackBishop.png\");\n    return board;\n  }\n\n  update(chosen_spot, piece) {\n    this.board[chosen_spot[0]][chosen_spot[1]] = piece;\n    this.board[piece.spot[0]][piece.spot[1]] = new Piece(piece.spot, '0', 'e');\n  }\n\n}\n\nexport default GameBoard;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb/my-app/src/Components/GameBoard.js"],"names":["Piece","Pawn","Rook","Bishop","GameBoard","constructor","board","createBoard","rowindex","row","columnindex","p","push","map","x","index","update","chosen_spot","piece","spot"],"mappings":"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","sourcesContent":["import { Piece , Pawn, Rook,Bishop} from \"./pieces\"\r\n\r\n\r\nclass GameBoard {\r\n    constructor() {\r\n        this.board = this.createBoard()\r\n    }\r\n\r\n    createBoard () {\r\n        const board = []\r\n        for (let rowindex = 0; rowindex < 8; rowindex++) {\r\n            const row = []\r\n            for (let columnindex = 0; columnindex < 8; columnindex++) {\r\n                let p = new Piece([rowindex,columnindex],'0','e',\"\")\r\n                row.push(p);\r\n            }\r\n            board.push(row)\r\n        }\r\n        board[6] = board[6].map((x,index) => new Pawn([6,index],'P','w',\"WhitePawn.png\"))\r\n        board[1] = board[1].map((x,index) => new Pawn([1,index],'P','b',\"BlackPawn.png\"))\r\n        \r\n        // board_imgs[7][4] = \"WhiteKing.png\"\r\n        // board_imgs[7][3] = \"WhiteQueen.png\"\r\n        // board_imgs[7][0] = \"WhiteRook.png\"\r\n        // board_imgs[7][7] = \"WhiteRook.png\"\r\n        // board_imgs[7][2] = \"WhiteBishop.png\"\r\n        // board_imgs[7][5] = \"WhiteBishop.png\"\r\n        // board_imgs[7][1] = \"WhiteKnight.png\"\r\n        // board_imgs[7][6] = \"WhiteKnight.png\"\r\n\r\n        // board_imgs[0][4] = \"BlackKing.png\"\r\n        // board_imgs[0][3] = \"BlackQueen.png\"\r\n        // board_imgs[0][0] = \"BlackRook.png\"\r\n        // board_imgs[0][7] = \"BlackRook.png\"\r\n        // board_imgs[0][2] = \"BlackBishop.png\"\r\n        // board_imgs[0][5] = \"BlackBishop.png\"\r\n        // board_imgs[0][1] = \"BlackKnight.png\"\r\n        // board_imgs[0][6] = \"BlackKnight.png\"\r\n\r\n        board[7][0] = new Rook([7,0],'R','w',\"WhiteRook.png\")\r\n        board[7][7] = new Rook([7,7],'R','w',\"WhiteRook.png\")\r\n        board[0][0] = new Rook([0,0],'R','b',\"BlackRook.png\")\r\n        board[0][7] = new Rook([0,7],'R','b',\"BlackRook.png\")\r\n        board[7][2] = new Bishop([7,2],'B','w',\"WhiteBishop.png\")\r\n        board[7][5] = new Bishop([7,5],'B','w',\"WhiteBishop.png\")\r\n        board[0][2] = new Bishop([0,2],'B','B',\"BlackBishop.png\")\r\n        board[0][2] = new Bishop([0,2],'B','B',\"BlackBishop.png\")\r\n\r\n        return board;\r\n    } \r\n    \r\n    update (chosen_spot, piece) {\r\n        this.board[chosen_spot[0]][chosen_spot[1]] = piece;\r\n        this.board[piece.spot[0]][piece.spot[1]] = new Piece(piece.spot,'0','e');\r\n    }\r\n}\r\n\r\nexport default GameBoard"]},"metadata":{},"sourceType":"module"}