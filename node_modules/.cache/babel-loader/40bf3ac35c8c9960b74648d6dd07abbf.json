{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb1\\\\src\\\\App.js\";\nimport React from 'react';\nimport Board from \"./Components/Board\";\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePiece = piece => {\n      console.log(this.board);\n\n      if (this.state.piece === \" \") {\n        const move_options = piece.move_options(this.board);\n        this.setState({\n          piece: piece,\n          move_options: move_options\n        }, () => {\n          console.log(this.state);\n        });\n      } else {\n        if (this.IsSpotInOptions(piece.spot)) {\n          const chosen_spot = [this.state.piece.spot[0], this.state.piece.spot[1]];\n          this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot, this.game_board);\n        }\n\n        this.setState({\n          piece: \" \",\n          move_options: []\n        }, () => {\n          console.log(this.state);\n        });\n      }\n    };\n\n    this.IsSpotInOptions = spot => {\n      for (let index = 0; index < this.state.move_options.length; index++) {\n        const element = this.state.move_options[index];\n\n        if (element[0] === spot[0] && element[1] === spot[1]) {\n          console.log(\"found\");\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.game_board = new GameBoard();\n    this.board = this.game_board.board;\n    this.state = {\n      piece: \" \",\n      move_options: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Board, {\n      board: this.board,\n      handlePiece: this.handlePiece\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb1/src/App.js"],"names":["React","Board","GameBoard","App","Component","constructor","handlePiece","piece","console","log","board","state","move_options","setState","IsSpotInOptions","spot","chosen_spot","move","game_board","index","length","element","render"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;;AADa,SAUfC,WAVe,GAUAC,KAAD,IAAW;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;;AACA,UAAI,KAAKC,KAAL,CAAWJ,KAAX,KAAqB,GAAzB,EAA8B;AAC5B,cAAMK,YAAY,GAAGL,KAAK,CAACK,YAAN,CAAmB,KAAKF,KAAxB,CAArB;AACA,aAAKG,QAAL,CAAc;AAACN,UAAAA,KAAK,EAAEA,KAAR;AAAeK,UAAAA,YAAY,EAAEA;AAA7B,SAAd,EAA0D,MAAM;AAC9DJ,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AACD,SAFD;AAGD,OALD,MAMK;AACH,YAAI,KAAKG,eAAL,CAAqBP,KAAK,CAACQ,IAA3B,CAAJ,EAAsC;AACpC,gBAAMC,WAAW,GAAG,CAAC,KAAKL,KAAL,CAAWJ,KAAX,CAAiBQ,IAAjB,CAAsB,CAAtB,CAAD,EAA0B,KAAKJ,KAAL,CAAWJ,KAAX,CAAiBQ,IAAjB,CAAsB,CAAtB,CAA1B,CAApB;AACA,eAAKL,KAAL,CAAWM,WAAW,CAAC,CAAD,CAAtB,EAA2BA,WAAW,CAAC,CAAD,CAAtC,EAA2CC,IAA3C,CAAgDV,KAAK,CAACQ,IAAtD,EAA2D,KAAKG,UAAhE;AACD;;AACD,aAAKL,QAAL,CAAc;AAACN,UAAAA,KAAK,EAAC,GAAP;AAAYK,UAAAA,YAAY,EAAC;AAAzB,SAAd,EAA4C,MAAM;AAChDJ,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;AACD,SAFD;AAGD;AACF,KA3Bc;;AAAA,SA6BfG,eA7Be,GA6BIC,IAAD,IAAU;AAC1B,WAAK,IAAII,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKR,KAAL,CAAWC,YAAX,CAAwBQ,MAApD,EAA4DD,KAAK,EAAjE,EAAqE;AACnE,cAAME,OAAO,GAAG,KAAKV,KAAL,CAAWC,YAAX,CAAwBO,KAAxB,CAAhB;;AACA,YAAIE,OAAO,CAAC,CAAD,CAAP,KAAeN,IAAI,CAAC,CAAD,CAAnB,IAA0BM,OAAO,CAAC,CAAD,CAAP,KAAeN,IAAI,CAAC,CAAD,CAAjD,EAAsD;AACpDP,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD,KAtCc;;AAEb,SAAKS,UAAL,GAAkB,IAAIhB,SAAJ,EAAlB;AACA,SAAKQ,KAAL,GAAa,KAAKQ,UAAL,CAAgBR,KAA7B;AACA,SAAKC,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,GADI;AAEXK,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAgCDU,EAAAA,MAAM,GAAI;AACR,wBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAI,KAAKZ,KAArB;AAA4B,MAAA,WAAW,EAAI,KAAKJ;AAAhD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AA7C+B;;AAgDlC,eAAeH,GAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport Board from \"./Components/Board\"\r\nimport GameBoard from './Components/GameBoard';\r\n\r\nclass App extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.game_board = new GameBoard()\r\n    this.board = this.game_board.board\r\n    this.state = {\r\n      piece: \" \",\r\n      move_options: []\r\n    }\r\n  }\r\n\r\n  handlePiece = (piece) => {\r\n    console.log(this.board)\r\n    if (this.state.piece === \" \") {\r\n      const move_options = piece.move_options(this.board) \r\n      this.setState({piece: piece, move_options: move_options}, () => {\r\n        console.log(this.state)\r\n      })     \r\n    }\r\n    else {\r\n      if (this.IsSpotInOptions(piece.spot)) {\r\n        const chosen_spot = [this.state.piece.spot[0],this.state.piece.spot[1]]\r\n        this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot,this.game_board)\r\n      }\r\n      this.setState({piece:\" \", move_options:[]}, () => {\r\n        console.log(this.state)\r\n      })\r\n    }\r\n  }\r\n\r\n  IsSpotInOptions = (spot) => {\r\n    for (let index = 0; index < this.state.move_options.length; index++) {\r\n      const element = this.state.move_options[index];\r\n      if (element[0] === spot[0] && element[1] === spot[1]) {\r\n        console.log(\"found\")\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <Board board = {this.board} handlePiece = {this.handlePiece} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}