{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\stein\\\\Documents\\\\GitHub\\\\ChessWeb1\\\\src\\\\Components\\\\Timer.js\";\nimport React from \"react\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startClock = () => {\n      this.myInterval = setInterval(() => {\n        this.setState(prevState => {\n          if (prevState.time === 1) {\n            this.stopClock();\n            return {\n              time: prevState.time - 1,\n              lost: true\n            };\n          }\n\n          return {\n            time: prevState.time - 1\n          };\n        });\n      }, 1000);\n    };\n\n    this.stopClock = () => {\n      clearInterval(this.myInterval);\n    };\n\n    this.formatTimer = () => {\n      let time = \"\";\n      const minutes = Math.floor(this.state.time / 60);\n      const seconds = this.state.time % 60;\n\n      if (minutes < 10) {\n        time += \"0\" + minutes + \":\";\n      } else {\n        time += minutes + \":\";\n      }\n\n      if (seconds < 10) {\n        time += \"0\" + seconds;\n      } else {\n        time += seconds;\n      }\n\n      return time;\n    };\n\n    this.state = {\n      color: props.color,\n      time: 900\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.turn === 'b') {\n      this.startClock();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.turn !== this.props.turn) {\n      if (this.props.turn === this.state.color) {\n        this.startClock();\n      } else {\n        this.stopClock();\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: this.formatTimer()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/stein/Documents/GitHub/ChessWeb1/src/Components/Timer.js"],"names":["React","Timer","Component","constructor","props","startClock","myInterval","setInterval","setState","prevState","time","stopClock","lost","clearInterval","formatTimer","minutes","Math","floor","state","seconds","color","componentDidMount","turn","componentDidUpdate","prevProps","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAwBpBC,UAxBoB,GAwBP,MAAM;AACf,WAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChC,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,cAAIA,SAAS,CAACC,IAAV,KAAmB,CAAvB,EAA0B;AACtB,iBAAKC,SAAL;AACA,mBAAO;AAACD,cAAAA,IAAI,EAAED,SAAS,CAACC,IAAV,GAAiB,CAAxB;AAA2BE,cAAAA,IAAI,EAAE;AAAjC,aAAP;AACH;;AACD,iBAAO;AAACF,YAAAA,IAAI,EAAED,SAAS,CAACC,IAAV,GAAiB;AAAxB,WAAP;AACH,SAND;AAOH,OAR4B,EAQ1B,IAR0B,CAA7B;AASH,KAlCmB;;AAAA,SAoCpBC,SApCoB,GAoCR,MAAM;AACdE,MAAAA,aAAa,CAAC,KAAKP,UAAN,CAAb;AACH,KAtCmB;;AAAA,SAwCpBQ,WAxCoB,GAwCN,MAAK;AACf,UAAIJ,IAAI,GAAG,EAAX;AACA,YAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,KAAL,CAAWR,IAAX,GAAkB,EAA7B,CAAhB;AACA,YAAMS,OAAO,GAAG,KAAKD,KAAL,CAAWR,IAAX,GAAkB,EAAlC;;AACA,UAAIK,OAAO,GAAG,EAAd,EAAkB;AACdL,QAAAA,IAAI,IAAI,MAAMK,OAAN,GAAgB,GAAxB;AACH,OAFD,MAGK;AACDL,QAAAA,IAAI,IAAIK,OAAO,GAAG,GAAlB;AACH;;AACD,UAAII,OAAO,GAAG,EAAd,EAAkB;AACdT,QAAAA,IAAI,IAAI,MAAMS,OAAd;AACH,OAFD,MAGK;AACDT,QAAAA,IAAI,IAAIS,OAAR;AACH;;AACD,aAAOT,IAAP;AACH,KAzDmB;;AAEhB,SAAKQ,KAAL,GAAa;AACTE,MAAAA,KAAK,EAAEhB,KAAK,CAACgB,KADJ;AAETV,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AACDW,EAAAA,iBAAiB,GAAE;AACf,QAAI,KAAKjB,KAAL,CAAWkB,IAAX,KAAoB,GAAxB,EAA6B;AACzB,WAAKjB,UAAL;AACH;AACJ;;AAEDkB,EAAAA,kBAAkB,CAAEC,SAAF,EAAa;AAC3B,QAAIA,SAAS,CAACF,IAAV,KAAmB,KAAKlB,KAAL,CAAWkB,IAAlC,EAAwC;AACpC,UAAI,KAAKlB,KAAL,CAAWkB,IAAX,KAAoB,KAAKJ,KAAL,CAAWE,KAAnC,EAA0C;AACtC,aAAKf,UAAL;AACH,OAFD,MAGI;AACA,aAAKM,SAAL;AACH;AACJ;AACJ;;AAqCDc,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwB,KAAKX,WAAL;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAhE+B;;AAmEpC,eAAeb,KAAf","sourcesContent":["import React from \"react\"\r\n\r\n\r\n\r\nclass Timer extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            color: props.color,\r\n            time: 900\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        if (this.props.turn === 'b') {\r\n            this.startClock()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate (prevProps) {\r\n        if (prevProps.turn !== this.props.turn) {\r\n            if (this.props.turn === this.state.color) {\r\n                this.startClock()\r\n            }\r\n            else{\r\n                this.stopClock()\r\n            }\r\n        }\r\n    }\r\n\r\n    startClock = () => {\r\n        this.myInterval = setInterval(() => {\r\n            this.setState(prevState => {\r\n                if (prevState.time === 1) {\r\n                    this.stopClock()\r\n                    return {time: prevState.time - 1, lost: true}\r\n                }\r\n                return {time: prevState.time - 1}\r\n            })\r\n        }, 1000)\r\n    }\r\n\r\n    stopClock = () => {\r\n        clearInterval(this.myInterval)\r\n    }\r\n    \r\n    formatTimer = () =>{\r\n        let time = \"\"\r\n        const minutes = Math.floor(this.state.time / 60)\r\n        const seconds = this.state.time % 60\r\n        if (minutes < 10) {\r\n            time += \"0\" + minutes + \":\"\r\n        }\r\n        else {\r\n            time += minutes + \":\"\r\n        }\r\n        if (seconds < 10) {\r\n            time += \"0\" + seconds\r\n        }\r\n        else {\r\n            time += seconds\r\n        }\r\n        return time\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"timer\">{this.formatTimer()}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer"]},"metadata":{},"sourceType":"module"}