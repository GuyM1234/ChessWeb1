{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb1\\\\src\\\\App.js\";\nimport React from 'react';\nimport Board from \"./Components/Board\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = piece => {\n      const row = piece.spot[0];\n      const column = piece.spot[1];\n      this.setState(prevState => {\n        if (this.state.piece == null) {\n          if (this.state.game.turn === piece.color) {\n            const move_options = piece.getAvaliableMoves(prevState.game);\n\n            if (move_options.length > 0) {\n              return {\n                piece: piece,\n                game: prevState.game,\n                move_options: move_options\n              };\n            }\n          }\n        } else {\n          if (this.IsSpotInOptions(piece.spot, this.state.move_options)) {\n            prevState.game.board[prevState.piece.spot[0]][prevState.piece.spot[1]].move([row, column], this.state.game);\n            prevState.game.updateTurn();\n            this.updateStatus(prevState.game);\n          }\n\n          return {\n            piece: null,\n            game: prevState.game,\n            move_options: []\n          };\n        }\n      });\n    };\n\n    this.updateStatus = status => {\n      this.setState({\n        status: status\n      });\n    };\n\n    this.turn = 'w';\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"status\",\n        children: this.state.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        board: this.state.board,\n        updateStatus: this.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb1/src/App.js"],"names":["React","Board","App","Component","constructor","handleClick","piece","row","spot","column","setState","prevState","state","game","turn","color","move_options","getAvaliableMoves","length","IsSpotInOptions","board","move","updateTurn","updateStatus","status","render"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;;AADa,SASfC,WATe,GASAC,KAAD,IAAW;AACvB,YAAMC,GAAG,GAAGD,KAAK,CAACE,IAAN,CAAW,CAAX,CAAZ;AACA,YAAMC,MAAM,GAAGH,KAAK,CAACE,IAAN,CAAW,CAAX,CAAf;AACA,WAAKE,QAAL,CAAcC,SAAS,IAAI;AACzB,YAAI,KAAKC,KAAL,CAAWN,KAAX,IAAoB,IAAxB,EAA8B;AAC5B,cAAI,KAAKM,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,KAAyBR,KAAK,CAACS,KAAnC,EAA0C;AACxC,kBAAMC,YAAY,GAAGV,KAAK,CAACW,iBAAN,CAAwBN,SAAS,CAACE,IAAlC,CAArB;;AACA,gBAAIG,YAAY,CAACE,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,qBAAO;AAACZ,gBAAAA,KAAK,EAAEA,KAAR;AAAeO,gBAAAA,IAAI,EAAEF,SAAS,CAACE,IAA/B;AAAqCG,gBAAAA,YAAY,EAAEA;AAAnD,eAAP;AACD;AACF;AACF,SAPD,MAQI;AACF,cAAI,KAAKG,eAAL,CAAqBb,KAAK,CAACE,IAA3B,EAAiC,KAAKI,KAAL,CAAWI,YAA5C,CAAJ,EAA+D;AAC7DL,YAAAA,SAAS,CAACE,IAAV,CAAeO,KAAf,CAAqBT,SAAS,CAACL,KAAV,CAAgBE,IAAhB,CAAqB,CAArB,CAArB,EAA8CG,SAAS,CAACL,KAAV,CAAgBE,IAAhB,CAAqB,CAArB,CAA9C,EAAuEa,IAAvE,CAA4E,CAACd,GAAD,EAAKE,MAAL,CAA5E,EAAyF,KAAKG,KAAL,CAAWC,IAApG;AACAF,YAAAA,SAAS,CAACE,IAAV,CAAeS,UAAf;AACA,iBAAKC,YAAL,CAAkBZ,SAAS,CAACE,IAA5B;AACD;;AACD,iBAAO;AAACP,YAAAA,KAAK,EAAE,IAAR;AAAcO,YAAAA,IAAI,EAAEF,SAAS,CAACE,IAA9B;AAAoCG,YAAAA,YAAY,EAAE;AAAlD,WAAP;AACD;AACF,OAjBD;AAkBD,KA9Bc;;AAAA,SAiCfO,YAjCe,GAiCCC,MAAD,IAAY;AACzB,WAAKd,QAAL,CAAc;AAACc,QAAAA,MAAM,EAAEA;AAAT,OAAd;AACD,KAnCc;;AAEb,SAAKV,IAAL,GAAY,GAAZ;AACA,SAAKF,KAAL,GAAa;AACXY,MAAAA,MAAM,EAAE;AADG,KAAb;AAID;;AA6BDC,EAAAA,MAAM,GAAI;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA,kBAAwB,KAAKb,KAAL,CAAWY;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAI,KAAKZ,KAAL,CAAWQ,KAA3B;AAAkC,QAAA,YAAY,EAAI,KAAKG;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AA7C+B;;AAgDlC,eAAerB,GAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport Board from \"./Components/Board\"\r\n\r\nclass App extends React.Component {\r\n  constructor () {\r\n    super()\r\n    this.turn = 'w'\r\n    this.state = {\r\n      status: \"\"\r\n    }\r\n    \r\n  }\r\n\r\n  handleClick = (piece) => {\r\n    const row = piece.spot[0]\r\n    const column = piece.spot[1]\r\n    this.setState(prevState => {\r\n      if (this.state.piece == null) {\r\n        if (this.state.game.turn === piece.color) {\r\n          const move_options = piece.getAvaliableMoves(prevState.game)\r\n          if (move_options.length > 0) { \r\n            return {piece: piece, game: prevState.game, move_options: move_options}\r\n          }\r\n        }\r\n      }\r\n      else{\r\n        if (this.IsSpotInOptions(piece.spot, this.state.move_options)) {\r\n          prevState.game.board[prevState.piece.spot[0]][prevState.piece.spot[1]].move([row,column],this.state.game)\r\n          prevState.game.updateTurn()\r\n          this.updateStatus(prevState.game)\r\n        }\r\n        return {piece: null, game: prevState.game, move_options: []}\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n  updateStatus = (status) => {\r\n    this.setState({status: status})\r\n  }\r\n  render () {\r\n    return(\r\n      <div className=\"game\">\r\n        <h1 className=\"status\">{this.state.status}</h1>\r\n        <Board board = {this.state.board} updateStatus = {this.updateStatus}/>\r\n      </div>\r\n     \r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}