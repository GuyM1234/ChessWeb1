{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb1\\\\src\\\\Components\\\\Board.js\";\nimport React from \"react\";\nimport Block from \"./Block\";\nimport GameBoard from \"./GameBoard\";\n\nclass Board extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePiece = piece => {\n      if (this.state.piece === \" \") {\n        const move_options = piece.move_options(this.board);\n\n        if (move_options > 0) {\n          this.setState({\n            piece: piece,\n            move_options: move_options\n          });\n        }\n      } else {\n        if (this.IsSpotInOptions(piece.spot)) {\n          this.board[this.state.piece.spot[0]][this.state.piece.spot[1]].move(piece.spot, this.game_board);\n        }\n\n        this.setState({\n          piece: \" \",\n          move_options: []\n        });\n      }\n    };\n\n    this.IsSpotInOptions = spot => {\n      for (let index = 0; index < this.state.move_options.length; index++) {\n        const element = this.state.move_options[index];\n\n        if (element[0] === spot[0] && element[1] === spot[1]) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.game_board = new GameBoard();\n    this.board = this.game_board.board;\n    this.state = {\n      piece: \" \",\n      move_options: []\n    };\n  }\n\n  render() {\n    console.log(this.board);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: this.board.map(row => row.map(piece => /*#__PURE__*/_jsxDEV(Block, {\n        piece: piece,\n        handlePiece: this.handlePiece\n      }, piece.spot, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 57\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb1/src/Components/Board.js"],"names":["React","Block","GameBoard","Board","Component","constructor","handlePiece","piece","state","move_options","board","setState","IsSpotInOptions","spot","move","game_board","index","length","element","render","console","log","map","row"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAEhCC,EAAAA,WAAW,GAAI;AACX;;AADW,SAUfC,WAVe,GAUAC,KAAD,IAAW;AACrB,UAAI,KAAKC,KAAL,CAAWD,KAAX,KAAqB,GAAzB,EAA8B;AAC5B,cAAME,YAAY,GAAGF,KAAK,CAACE,YAAN,CAAmB,KAAKC,KAAxB,CAArB;;AACA,YAAID,YAAY,GAAG,CAAnB,EAAqB;AACnB,eAAKE,QAAL,CAAc;AAACJ,YAAAA,KAAK,EAAEA,KAAR;AAAeE,YAAAA,YAAY,EAAEA;AAA7B,WAAd;AACD;AACF,OALD,MAMK;AACH,YAAI,KAAKG,eAAL,CAAqBL,KAAK,CAACM,IAA3B,CAAJ,EAAsC;AACpC,eAAKH,KAAL,CAAW,KAAKF,KAAL,CAAWD,KAAX,CAAiBM,IAAjB,CAAsB,CAAtB,CAAX,EAAqC,KAAKL,KAAL,CAAWD,KAAX,CAAiBM,IAAjB,CAAsB,CAAtB,CAArC,EAA+DC,IAA/D,CAAoEP,KAAK,CAACM,IAA1E,EAAgF,KAAKE,UAArF;AACD;;AACD,aAAKJ,QAAL,CAAc;AAACJ,UAAAA,KAAK,EAAC,GAAP;AAAYE,UAAAA,YAAY,EAAE;AAA1B,SAAd;AACD;AACF,KAvBY;;AAAA,SAyBbG,eAzBa,GAyBMC,IAAD,IAAU;AAC1B,WAAK,IAAIG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKR,KAAL,CAAWC,YAAX,CAAwBQ,MAApD,EAA4DD,KAAK,EAAjE,EAAqE;AACnE,cAAME,OAAO,GAAG,KAAKV,KAAL,CAAWC,YAAX,CAAwBO,KAAxB,CAAhB;;AACA,YAAIE,OAAO,CAAC,CAAD,CAAP,KAAeL,IAAI,CAAC,CAAD,CAAnB,IAA0BK,OAAO,CAAC,CAAD,CAAP,KAAeL,IAAI,CAAC,CAAD,CAAjD,EAAsD;AACpD,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD,KAjCY;;AAEX,SAAKE,UAAL,GAAkB,IAAIb,SAAJ,EAAlB;AACA,SAAKQ,KAAL,GAAa,KAAKK,UAAL,CAAgBL,KAA7B;AACA,SAAKF,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,GADI;AAEXE,MAAAA,YAAY,EAAE;AAFH,KAAb;AAIH;;AA2BCU,EAAAA,MAAM,GAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AACA,wBACR;AAAgB,MAAA,SAAS,EAAC,OAA1B;AAAA,gBACiB,KAAKA,KAAL,CAAWY,GAAX,CAAeC,GAAG,IAAIA,GAAG,CAACD,GAAJ,CAAQf,KAAK,iBAAI,QAAC,KAAD;AAAyB,QAAA,KAAK,EAAIA,KAAlC;AAAyC,QAAA,WAAW,EAAI,KAAKD;AAA7D,SAAaC,KAAK,CAACM,IAAnB;AAAA;AAAA;AAAA;AAAA,cAAjB,CAAtB;AADjB;AAAA;AAAA;AAAA;AAAA,YADQ;AAKD;;AA5C6B;;AA8CpC,eAAeV,KAAf","sourcesContent":["import React from \"react\";\r\nimport Block from \"./Block\"\r\nimport GameBoard from \"./GameBoard\"\r\n\r\nclass Board extends React.Component {\r\n\r\n    constructor () {\r\n        super()\r\n        this.game_board = new GameBoard()\r\n        this.board = this.game_board.board\r\n        this.state = {\r\n          piece: \" \",\r\n          move_options: []\r\n        }\r\n    }\r\n\r\n    handlePiece = (piece) => {\r\n        if (this.state.piece === \" \") {\r\n          const move_options = piece.move_options(this.board)\r\n          if (move_options > 0){\r\n            this.setState({piece: piece, move_options: move_options})  \r\n          }     \r\n        }\r\n        else {\r\n          if (this.IsSpotInOptions(piece.spot)) {\r\n            this.board[this.state.piece.spot[0]][this.state.piece.spot[1]].move(piece.spot, this.game_board)\r\n          }\r\n          this.setState({piece:\" \", move_options: []})\r\n        }\r\n      }\r\n\r\n      IsSpotInOptions = (spot) => {\r\n        for (let index = 0; index < this.state.move_options.length; index++) {\r\n          const element = this.state.move_options[index];\r\n          if (element[0] === spot[0] && element[1] === spot[1]) {\r\n            return true\r\n          }\r\n        }\r\n        return false\r\n      }\r\n\r\n      render () {\r\n        console.log(this.board)\r\n        return (\r\n<           div className=\"board\">\r\n                {this.board.map(row => row.map(piece => <Block key ={piece.spot} piece = {piece} handlePiece = {this.handlePiece}/>))}\r\n            </div> \r\n        )\r\n      }  \r\n}\r\nexport default Board"]},"metadata":{},"sourceType":"module"}