{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWebOld\\\\my-app\\\\src\\\\Components\\\\Block.js\";\nimport React from \"react\";\n\nconst Block = props => {\n  const piece = props.piece;\n  const src = \".\\\\Chesspieceses\\\\\" + piece.img;\n\n  if ((piece.spot[0] + piece.spot[1]) % 2 === 0) {\n    const className = \"block white\";\n  } else {\n    const className = \"block black\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    oncick: () => props.handlePiece(piece),\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"piece\",\n      src: src,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Block;\nexport default Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWebOld/my-app/src/Components/Block.js"],"names":["React","Block","props","piece","src","img","spot","className","handlePiece"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,KAAK,GAAGD,KAAK,CAACC,KAApB;AACA,QAAMC,GAAG,GAAG,uBAAuBD,KAAK,CAACE,GAAzC;;AACA,MAAI,CAACF,KAAK,CAACG,IAAN,CAAW,CAAX,IAAgBH,KAAK,CAACG,IAAN,CAAW,CAAX,CAAjB,IAAkC,CAAlC,KAAwC,CAA5C,EAA+C;AAC3C,UAAMC,SAAS,GAAG,aAAlB;AACH,GAFD,MAEK;AACD,UAAMA,SAAS,GAAG,aAAlB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAEA,SAAhB;AAA2B,IAAA,MAAM,EAAI,MAAML,KAAK,CAACM,WAAN,CAAkBL,KAAlB,CAA3C;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,GAAG,EAAEC,GAA5B;AAAiC,MAAA,GAAG,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAdD;;KAAMH,K;AAgBN,eAAeA,KAAf","sourcesContent":["\r\nimport React from \"react\"\r\n\r\nconst Block = (props) => {\r\n    const piece = props.piece\r\n    const src = \".\\\\Chesspieceses\\\\\" + piece.img\r\n    if ((piece.spot[0] + piece.spot[1]) % 2 === 0 ){\r\n        const className = \"block white\"\r\n    }else{\r\n        const className = \"block black\"\r\n    }\r\n    \r\n    return (\r\n        <div className={className} oncick = {() => props.handlePiece(piece)}>\r\n            <img className=\"piece\" src={src} alt=\"\"></img>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Block\r\n\r\n"]},"metadata":{},"sourceType":"module"}