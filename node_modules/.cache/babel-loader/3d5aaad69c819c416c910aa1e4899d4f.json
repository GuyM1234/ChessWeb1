{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb1\\\\src\\\\Components\\\\Timer.js\";\nimport React from \"react\";\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startClock = () => {\n      this.myInterval = setInterval(() => {\n        this.setState(prevState => {\n          return {\n            time: prevState.time - 1\n          };\n        });\n      }, 1000);\n    };\n\n    this.stopClock = () => {\n      clearInterval(this.myInterval);\n    };\n\n    this.formatTimer = () => {\n      let time = \"\";\n      const minutes = Math.floor(this.state.time / 60);\n      const seconds = this.state.time % 60;\n\n      if (minutes < 10) {\n        time += \"0\" + minutes + \":\";\n      } else {\n        time += minutes + \":\";\n      }\n\n      if (seconds < 10) {\n        time += \"0\" + seconds;\n      } else {\n        time += seconds;\n      }\n\n      return time;\n    };\n\n    this.state = {\n      color: props.color,\n      time: 900\n    };\n  }\n\n  render() {\n    if (this.props.color === this.state) {\n      this.startClock();\n    } else {\n      this.stopClock();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: this.formatTimer()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb1/src/Components/Timer.js"],"names":["React","Timer","Component","constructor","props","startClock","myInterval","setInterval","setState","prevState","time","stopClock","clearInterval","formatTimer","minutes","Math","floor","state","seconds","color","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAOpBC,UAPoB,GAOP,MAAM;AACf,WAAKC,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAClC,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAO;AAACC,YAAAA,IAAI,EAAED,SAAS,CAACC,IAAV,GAAiB;AAAxB,WAAP;AACH,SAFD;AAGD,OAJ4B,EAI1B,IAJ0B,CAA7B;AAKH,KAbmB;;AAAA,SAcpBC,SAdoB,GAcR,MAAM;AACdC,MAAAA,aAAa,CAAC,KAAKN,UAAN,CAAb;AACH,KAhBmB;;AAAA,SAkBpBO,WAlBoB,GAkBN,MAAK;AACf,UAAIH,IAAI,GAAG,EAAX;AACA,YAAMI,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKC,KAAL,CAAWP,IAAX,GAAkB,EAA7B,CAAhB;AACA,YAAMQ,OAAO,GAAG,KAAKD,KAAL,CAAWP,IAAX,GAAkB,EAAlC;;AACA,UAAII,OAAO,GAAG,EAAd,EAAkB;AACdJ,QAAAA,IAAI,IAAI,MAAMI,OAAN,GAAgB,GAAxB;AACH,OAFD,MAGK;AACDJ,QAAAA,IAAI,IAAII,OAAO,GAAG,GAAlB;AACH;;AACD,UAAII,OAAO,GAAG,EAAd,EAAkB;AACdR,QAAAA,IAAI,IAAI,MAAMQ,OAAd;AACH,OAFD,MAGK;AACDR,QAAAA,IAAI,IAAIQ,OAAR;AACH;;AACD,aAAOR,IAAP;AACH,KAnCmB;;AAEhB,SAAKO,KAAL,GAAa;AACTE,MAAAA,KAAK,EAAEf,KAAK,CAACe,KADJ;AAETT,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIH;;AA8BDU,EAAAA,MAAM,GAAI;AACN,QAAI,KAAKhB,KAAL,CAAWe,KAAX,KAAqB,KAAKF,KAA9B,EAAqC;AACjC,WAAKZ,UAAL;AACH,KAFD,MAGI;AACA,WAAKM,SAAL;AACH;;AACD,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBAAwB,KAAKE,WAAL;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AA/C+B;;AAkDpC,eAAeZ,KAAf","sourcesContent":["import React from \"react\"\r\n\r\n\r\n\r\nclass Timer extends React.Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {\r\n            color: props.color,\r\n            time: 900\r\n        }\r\n    }\r\n    startClock = () => {\r\n        this.myInterval = setInterval(() => {\r\n          this.setState(prevState => {\r\n              return {time: prevState.time - 1}\r\n          })\r\n        }, 1000)\r\n    }\r\n    stopClock = () => {\r\n        clearInterval(this.myInterval)\r\n    }\r\n    \r\n    formatTimer = () =>{\r\n        let time = \"\"\r\n        const minutes = Math.floor(this.state.time / 60)\r\n        const seconds = this.state.time % 60\r\n        if (minutes < 10) {\r\n            time += \"0\" + minutes + \":\"\r\n        }\r\n        else {\r\n            time += minutes + \":\"\r\n        }\r\n        if (seconds < 10) {\r\n            time += \"0\" + seconds\r\n        }\r\n        else {\r\n            time += seconds\r\n        }\r\n        return time\r\n    }\r\n    render () {\r\n        if (this.props.color === this.state) {\r\n            this.startClock()\r\n        }\r\n        else{\r\n            this.stopClock()\r\n        }\r\n        return (\r\n            <div className=\"timer\">{this.formatTimer()}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer"]},"metadata":{},"sourceType":"module"}