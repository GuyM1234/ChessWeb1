{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport BlocksBoard from \"./Components/BlocksBoard\";\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePiece = piece => {\n      if (this.state.piece != null) {\n        const move_option = piece.move_options(this.board);\n        this.setState({\n          piece_clicked: piece,\n          move_options: move_option\n        });\n        console.log(this.state);\n      } else {\n        if (this.state.move_options.includes(piece.spot)) {\n          const chosen_spot = [this.state.piece.spot[0], this.state.piece.spot[1]];\n          this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot);\n        }\n      }\n\n      console.log(piece.move_options(this.board));\n    };\n\n    this.game_board = new GameBoard();\n    this.board = this.game_board.board;\n    this.state = {\n      piece_clicked: null,\n      move_options: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BlocksBoard, {\n        board: this.board,\n        handlePiece: this.handlePiece\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb/my-app/src/App.js"],"names":["React","BlocksBoard","GameBoard","App","Component","constructor","handlePiece","piece","state","move_option","move_options","board","setState","piece_clicked","console","log","includes","spot","chosen_spot","move","game_board","render"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;;AADa,SAUfC,WAVe,GAUAC,KAAD,IAAW;AACvB,UAAI,KAAKC,KAAL,CAAWD,KAAX,IAAoB,IAAxB,EAA6B;AAC3B,cAAME,WAAW,GAAGF,KAAK,CAACG,YAAN,CAAmB,KAAKC,KAAxB,CAApB;AACA,aAAKC,QAAL,CAAc;AAACC,UAAAA,aAAa,EAACN,KAAf;AAAsBG,UAAAA,YAAY,EAACD;AAAnC,SAAd;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACD,OAJD,MAKI;AACF,YAAI,KAAKA,KAAL,CAAWE,YAAX,CAAwBM,QAAxB,CAAiCT,KAAK,CAACU,IAAvC,CAAJ,EAAiD;AAC/C,gBAAMC,WAAW,GAAG,CAAC,KAAKV,KAAL,CAAWD,KAAX,CAAiBU,IAAjB,CAAsB,CAAtB,CAAD,EAA0B,KAAKT,KAAL,CAAWD,KAAX,CAAiBU,IAAjB,CAAsB,CAAtB,CAA1B,CAApB;AACA,eAAKN,KAAL,CAAWO,WAAW,CAAC,CAAD,CAAtB,EAA2BA,WAAW,CAAC,CAAD,CAAtC,EAA2CC,IAA3C,CAAgDZ,KAAK,CAACU,IAAtD;AACD;AACF;;AAGDH,MAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACG,YAAN,CAAmB,KAAKC,KAAxB,CAAZ;AACD,KAzBc;;AAEb,SAAKS,UAAL,GAAkB,IAAIlB,SAAJ,EAAlB;AACA,SAAKS,KAAL,GAAa,KAAKS,UAAL,CAAgBT,KAA7B;AACA,SAAKH,KAAL,GAAa;AACXK,MAAAA,aAAa,EAAE,IADJ;AAEXH,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAkBDW,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,6BACG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAI,KAAKV,KAA3B;AAAkC,QAAA,WAAW,EAAI,KAAKL;AAAtD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAjC+B;;AAoClC,eAAeH,GAAf","sourcesContent":["\nimport React from 'react';\nimport BlocksBoard from \"./Components/BlocksBoard\"\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.game_board = new GameBoard()\n    this.board = this.game_board.board\n    this.state = {\n      piece_clicked: null,\n      move_options: null\n    }\n  }\n  \n  handlePiece = (piece) => {\n    if (this.state.piece != null){\n      const move_option = piece.move_options(this.board)\n      this.setState({piece_clicked:piece, move_options:move_option })\n      console.log(this.state)\n    }\n    else{\n      if (this.state.move_options.includes(piece.spot)){\n        const chosen_spot = [this.state.piece.spot[0],this.state.piece.spot[1]]\n        this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot)\n      }\n    }\n\n\n    console.log(piece.move_options(this.board))\n  }\n  render () {\n    return(\n      <div>\n         <BlocksBoard board = {this.board} handlePiece = {this.handlePiece}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}