{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport testUtils from 'react-dom/test-utils';\nimport BlocksBoard from \"./Components/BlocksBoard\";\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.IsSpotInOptions = spot => {\n      for (let index = 0; index < this.state.move_options.length; index++) {\n        const element = this.state.move_options[index];\n\n        if (element[0] === spot[0] && element[1] === spot[1]) {\n          console.log(\"found\");\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    this.game_board = new GameBoard();\n    this.board = this.game_board.board;\n    this.handlePiece = this.handlePiece.bind(this);\n    this.IsSpotInOptions = this.IsSpotInOptions.bind(this);\n    this.state = {\n      piece: \" \",\n      move_options: []\n    };\n  }\n\n  handlePiece(piece) {\n    console.log(this.board);\n\n    if (this.state.piece == \" \") {\n      const move_options = piece.move_options(this.board);\n      this.setState({\n        piece: piece,\n        move_options: move_options\n      }, () => {\n        console.log(this.state);\n      });\n    } else {\n      const val = this.IsSpotInOptions;\n      console.log(val); // if (true){\n      //   const chosen_spot = [this.state.piece.spot[0],this.state.piece.spot[1]]\n      //   this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot)\n      // }\n      // this.setState({piece:\" \", move_options:[]}, () =>{\n      //   console.log(this.state)\n      // })\n    }\n  } //   this.setState({\n  //       piece_clicked: piece,\n  //       move_options: piece.move_options(this.board)\n  //     })\n  //   console.log(this.state)\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BlocksBoard, {\n        board: this.board,\n        handlePiece: this.handlePiece\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb/my-app/src/App.js"],"names":["React","testUtils","BlocksBoard","GameBoard","App","Component","constructor","IsSpotInOptions","spot","index","state","move_options","length","element","console","log","game_board","board","handlePiece","bind","piece","setState","val","render"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;;AADa,SAuCfC,eAvCe,GAuCIC,IAAD,IAAU;AAC1B,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAApD,EAA4DH,KAAK,EAAjE,EAAqE;AACnE,cAAMI,OAAO,GAAG,KAAKH,KAAL,CAAWC,YAAX,CAAwBF,KAAxB,CAAhB;;AACA,YAAII,OAAO,CAAC,CAAD,CAAP,KAAeL,IAAI,CAAC,CAAD,CAAnB,IAA0BK,OAAO,CAAC,CAAD,CAAP,KAAeL,IAAI,CAAC,CAAD,CAAjD,EAAqD;AACnDM,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD,KAhDc;;AAEb,SAAKC,UAAL,GAAkB,IAAIb,SAAJ,EAAlB;AACA,SAAKc,KAAL,GAAa,KAAKD,UAAL,CAAgBC,KAA7B;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKZ,eAAL,GAAuB,KAAKA,eAAL,CAAqBY,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKT,KAAL,GAAa;AACXU,MAAAA,KAAK,EAAE,GADI;AAEXT,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDO,EAAAA,WAAW,CAAEE,KAAF,EAAS;AAClBN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAjB;;AACA,QAAI,KAAKP,KAAL,CAAWU,KAAX,IAAoB,GAAxB,EAA4B;AAC1B,YAAMT,YAAY,GAAGS,KAAK,CAACT,YAAN,CAAmB,KAAKM,KAAxB,CAArB;AACA,WAAKI,QAAL,CAAc;AAACD,QAAAA,KAAK,EAAEA,KAAR;AAAeT,QAAAA,YAAY,EAAEA;AAA7B,OAAd,EAA0D,MAAM;AAC9DG,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACD,OAFD;AAGD,KALD,MAMI;AACF,YAAMY,GAAG,GAAG,KAAKf,eAAjB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ,EAFE,CAGF;AACA;AAEA;AACA;AACA;AACA;AACA;AACD;AACF,GAjC+B,CAkChC;AACA;AACA;AACA;AACA;;;AAcAC,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,6BACG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAI,KAAKN,KAA3B;AAAkC,QAAA,WAAW,EAAI,KAAKC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA1D+B;;AA6DlC,eAAed,GAAf","sourcesContent":["\nimport React from 'react';\nimport testUtils from 'react-dom/test-utils';\nimport BlocksBoard from \"./Components/BlocksBoard\"\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.game_board = new GameBoard()\n    this.board = this.game_board.board\n    this.handlePiece = this.handlePiece.bind(this)\n    this.IsSpotInOptions = this.IsSpotInOptions.bind(this)\n    this.state = {\n      piece: \" \",\n      move_options: []\n    }\n  }\n\n  handlePiece (piece) {\n    console.log(this.board)\n    if (this.state.piece == \" \"){\n      const move_options = piece.move_options(this.board) \n      this.setState({piece: piece, move_options: move_options}, () => {\n        console.log(this.state)\n      })     \n    }\n    else{\n      const val = this.IsSpotInOptions\n      console.log(val)\n      // if (true){\n      //   const chosen_spot = [this.state.piece.spot[0],this.state.piece.spot[1]]\n        \n      //   this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot)\n      // }\n      // this.setState({piece:\" \", move_options:[]}, () =>{\n      //   console.log(this.state)\n      // })\n    }\n  }\n  //   this.setState({\n  //       piece_clicked: piece,\n  //       move_options: piece.move_options(this.board)\n  //     })\n  //   console.log(this.state)\n\n  IsSpotInOptions = (spot) => {\n    for (let index = 0; index < this.state.move_options.length; index++) {\n      const element = this.state.move_options[index];\n      if (element[0] === spot[0] && element[1] === spot[1]){\n        console.log(\"found\")\n        return true\n      }\n    }\n    return false\n  }\n\n    \n  render () {\n    return(\n      <div>\n         <BlocksBoard board = {this.board} handlePiece = {this.handlePiece}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}