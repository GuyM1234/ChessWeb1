{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport testUtils from 'react-dom/test-utils';\nimport BlocksBoard from \"./Components/BlocksBoard\";\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.game_board = new GameBoard();\n    this.board = this.game_board.board;\n    this.handlePiece = this.handlePiece.bind(this);\n    this.IsSpotInOptions = this.IsSpotInOptions.bind(this);\n    this.state = {\n      piece: \" \",\n      move_options: []\n    };\n  }\n\n  handlePiece(piece) {\n    console.log(this.board);\n\n    if (this.state.piece == \" \") {\n      const move_options = piece.move_options(this.board);\n      this.setState({\n        piece: piece,\n        move_options: move_options\n      }, () => {\n        console.log(this.state);\n      });\n    } else {\n      if (this.IsSpotInOptions(piece.spot)) {\n        const chosen_spot = [this.state.piece.spot[0], this.state.piece.spot[1]];\n        this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot, this.game_board);\n      }\n\n      this.setState({\n        piece: \" \",\n        move_options: []\n      }, () => {\n        console.log(this.state);\n      });\n    }\n  } //   this.setState({\n  //       piece_clicked: piece,\n  //       move_options: piece.move_options(this.board)\n  //     })\n  //   console.log(this.state)\n\n\n  IsSpotInOptions(spot) {\n    for (let index = 0; index < this.state.move_options.length; index++) {\n      const element = this.state.move_options[index];\n\n      if (element[0] === spot[0] && element[1] === spot[1]) {\n        console.log(\"found\");\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.move_options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlocksBoard, {\n        board: this.board,\n        handlePiece: this.handlePiece\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb/my-app/src/App.js"],"names":["React","testUtils","BlocksBoard","GameBoard","App","Component","constructor","game_board","board","handlePiece","bind","IsSpotInOptions","state","piece","move_options","console","log","setState","spot","chosen_spot","move","index","length","element","render"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport testUtils from 'react-dom/test-utils';\nimport BlocksBoard from \"./Components/BlocksBoard\"\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.game_board = new GameBoard()\n    this.board = this.game_board.board\n    this.handlePiece = this.handlePiece.bind(this)\n    this.IsSpotInOptions = this.IsSpotInOptions.bind(this)\n    this.state = {\n      piece: \" \",\n      move_options: []\n    }\n  }\n\n  handlePiece (piece) {\n    console.log(this.board)\n    if (this.state.piece == \" \"){\n      const move_options = piece.move_options(this.board) \n      this.setState({piece: piece, move_options: move_options}, () => {\n        console.log(this.state)\n      })     \n    }\n    else{\n      if (this.IsSpotInOptions(piece.spot)){\n        const chosen_spot = [this.state.piece.spot[0],this.state.piece.spot[1]]\n        this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot,this.game_board)\n      }\n      this.setState({piece:\" \", move_options:[]}, () =>{\n        console.log(this.state)\n      })\n    }\n  }\n  //   this.setState({\n  //       piece_clicked: piece,\n  //       move_options: piece.move_options(this.board)\n  //     })\n  //   console.log(this.state)\n\n  IsSpotInOptions (spot) {\n    for (let index = 0; index < this.state.move_options.length; index++) {\n      const element = this.state.move_options[index];\n      if (element[0] === spot[0] && element[1] === spot[1]){\n        console.log(\"found\")\n        return true\n      }\n    }\n    return false\n  }\n\n    \n  render () {\n    return(\n      <div>\n        <h1>{this.state.move_options}</h1>\n         <BlocksBoard board = {this.board} handlePiece = {this.handlePiece}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}