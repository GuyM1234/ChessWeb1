{"ast":null,"code":"import { Piece, Pawn } from \"./pieces\";\n\nclass GameBoard {\n  constructor() {\n    this.board = this.createBoard();\n  }\n\n  createBoard() {\n    const board = [];\n\n    for (let row = 2; row < 6; row++) {\n      const row = [];\n\n      for (let column = 0; column < 8; column++) {\n        row.push(new Piece((row, column), '0', 'e'));\n      }\n\n      board.push(row);\n    }\n\n    for (let i = 0; i < 8; i++) {\n      board[6][i] = new Pawn((6, i), 'P', 'w');\n      board[1][i] = new Pawn((1, i), 'P', 'b');\n    }\n  }\n\n}\n\nexport default GameBoard;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb/my-app/src/Components/GameBoard.js"],"names":["Piece","Pawn","GameBoard","constructor","board","createBoard","row","column","push","i"],"mappings":"AAAA,SAASA,KAAT,EAAiBC,IAAjB,QAA6B,UAA7B;;AAGA,MAAMC,SAAN,CAAgB;AACZC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa,KAAKC,WAAL,EAAb;AACH;;AACDA,EAAAA,WAAW,GAAI;AACX,UAAMD,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,CAAxB,EAA2BA,GAAG,EAA9B,EAAkC;AAC9B,YAAMA,GAAG,GAAG,EAAZ;;AACA,WAAK,IAAIC,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,CAA9B,EAAiCA,MAAM,EAAvC,EAA2C;AACvCD,QAAAA,GAAG,CAACE,IAAJ,CAAS,IAAIR,KAAJ,EAAWM,GAAG,EAACC,MAAf,GAAuB,GAAvB,EAA2B,GAA3B,CAAT;AACH;;AACDH,MAAAA,KAAK,CAACI,IAAN,CAAWF,GAAX;AACH;;AACD,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBL,MAAAA,KAAK,CAAC,CAAD,CAAL,CAASK,CAAT,IAAc,IAAIR,IAAJ,EAAU,GAAEQ,CAAZ,GAAe,GAAf,EAAmB,GAAnB,CAAd;AACAL,MAAAA,KAAK,CAAC,CAAD,CAAL,CAASK,CAAT,IAAc,IAAKR,IAAL,EAAW,GAAEQ,CAAb,GAAgB,GAAhB,EAAoB,GAApB,CAAd;AACH;AACJ;;AAjBW;;AAoBhB,eAAeP,SAAf","sourcesContent":["import { Piece , Pawn}  from \"./pieces\"\r\n\r\n\r\nclass GameBoard {\r\n    constructor() {\r\n        this.board = this.createBoard()\r\n    }\r\n    createBoard () {\r\n        const board = []\r\n        for (let row = 2; row < 6; row++) {\r\n            const row = []\r\n            for (let column = 0; column < 8; column++) {\r\n                row.push(new Piece((row,column),'0','e'));\r\n            }\r\n            board.push(row)\r\n        }\r\n        for (let i = 0; i < 8; i++) {\r\n            board[6][i] = new Pawn((6,i),'P','w')\r\n            board[1][i] = new  Pawn((1,i),'P','b')\r\n        }\r\n    }   \r\n}\r\n\r\nexport default GameBoard"]},"metadata":{},"sourceType":"module"}