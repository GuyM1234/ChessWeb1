{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport BlocksBoard from \"./Components/BlocksBoard\";\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handlePiece = piece => {\n      if (this.state.piece == null) {\n        this.setState(piece => {\n          return {\n            piece_clicked: piece,\n            move_options: piece.move_options(this.board)\n          };\n        });\n        console.log(this.state);\n      } else {\n        if (this.state.move_options.includes(piece.spot)) {\n          const chosen_spot = [this.state.piece.spot[0], this.state.piece.spot[1]];\n          this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot);\n        }\n\n        this.state = this.setState({\n          piece_clicked: null,\n          move_options: null\n        });\n        console.log(\"chosen Spot clicked\");\n      }\n    };\n\n    this.game_board = new GameBoard();\n    this.board = this.game_board.board;\n    this.state = {\n      piece_clicked: null,\n      move_options: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BlocksBoard, {\n        board: this.board,\n        handlePiece: this.handlePiece\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb/my-app/src/App.js"],"names":["React","BlocksBoard","GameBoard","App","Component","constructor","handlePiece","piece","state","setState","piece_clicked","move_options","board","console","log","includes","spot","chosen_spot","move","game_board","render"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;;AADa,SAUfC,WAVe,GAUAC,KAAD,IAAW;AACvB,UAAI,KAAKC,KAAL,CAAWD,KAAX,IAAoB,IAAxB,EAA6B;AAC3B,aAAKE,QAAL,CAAeF,KAAD,IAAW;AACvB,iBACE;AACEG,YAAAA,aAAa,EAAEH,KADjB;AAEEI,YAAAA,YAAY,EAAEJ,KAAK,CAACI,YAAN,CAAmB,KAAKC,KAAxB;AAFhB,WADF;AAMD,SAPD;AAQAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACD,OAVD,MAWI;AACF,YAAI,KAAKA,KAAL,CAAWG,YAAX,CAAwBI,QAAxB,CAAiCR,KAAK,CAACS,IAAvC,CAAJ,EAAiD;AAC/C,gBAAMC,WAAW,GAAG,CAAC,KAAKT,KAAL,CAAWD,KAAX,CAAiBS,IAAjB,CAAsB,CAAtB,CAAD,EAA0B,KAAKR,KAAL,CAAWD,KAAX,CAAiBS,IAAjB,CAAsB,CAAtB,CAA1B,CAApB;AACA,eAAKJ,KAAL,CAAWK,WAAW,CAAC,CAAD,CAAtB,EAA2BA,WAAW,CAAC,CAAD,CAAtC,EAA2CC,IAA3C,CAAgDX,KAAK,CAACS,IAAtD;AACD;;AACD,aAAKR,KAAL,GAAa,KAAKC,QAAL,CAAc;AAACC,UAAAA,aAAa,EAAC,IAAf;AAAqBC,UAAAA,YAAY,EAAC;AAAlC,SAAd,CAAb;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF,KA9Bc;;AAEb,SAAKK,UAAL,GAAkB,IAAIjB,SAAJ,EAAlB;AACA,SAAKU,KAAL,GAAa,KAAKO,UAAL,CAAgBP,KAA7B;AACA,SAAKJ,KAAL,GAAa;AACXE,MAAAA,aAAa,EAAE,IADJ;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAwBDS,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,6BACG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAI,KAAKR,KAA3B;AAAkC,QAAA,WAAW,EAAI,KAAKN;AAAtD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAvC+B;;AA0ClC,eAAeH,GAAf","sourcesContent":["\nimport React from 'react';\nimport BlocksBoard from \"./Components/BlocksBoard\"\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.game_board = new GameBoard()\n    this.board = this.game_board.board\n    this.state = {\n      piece_clicked: null,\n      move_options: null\n    }\n  }\n\n  handlePiece = (piece) => {\n    if (this.state.piece == null){\n      this.setState((piece) => {\n        return (\n          {\n            piece_clicked: piece, \n            move_options: piece.move_options(this.board) \n          }\n        )\n      })\n      console.log(this.state)\n    }\n    else{\n      if (this.state.move_options.includes(piece.spot)){\n        const chosen_spot = [this.state.piece.spot[0],this.state.piece.spot[1]]\n        this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot)\n      }\n      this.state = this.setState({piece_clicked:null, move_options:null })\n      console.log(\"chosen Spot clicked\")\n    }\n  }\n\n  render () {\n    return(\n      <div>\n         <BlocksBoard board = {this.board} handlePiece = {this.handlePiece}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}