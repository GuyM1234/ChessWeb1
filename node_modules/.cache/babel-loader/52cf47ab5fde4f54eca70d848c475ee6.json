{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport BlocksBoard from \"./Components/BlocksBoard\";\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.game_board = new GameBoard();\n    this.board = this.game_board.board;\n    this.handlePiece = this.handlePiece.bind(this);\n    this.state = {\n      piece: \" \",\n      move_options: []\n    };\n  }\n\n  handlePiece(piece) {\n    if (this.state.piece == \" \") {\n      const move_options = piece.move_options(this.board);\n      this.setState({\n        piece: piece,\n        move_options: move_options\n      }, () => {\n        console.log(this.state.piece);\n      });\n    } else {\n      if (this.state.move_options.includes(piece.spot)) {\n        const chosen_spot = [this.state.piece.spot[0], this.state.piece.spot[1]];\n        this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot);\n      }\n\n      this.setState({\n        piece_clicked: \" \",\n        move_options: []\n      });\n      console.log(this.state);\n    } //   this.setState({\n    //       piece_clicked: piece,\n    //       move_options: piece.move_options(this.board)\n    //     })\n    //   console.log(this.state)\n\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BlocksBoard, {\n        board: this.board,\n        handlePiece: this.handlePiece\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb/my-app/src/App.js"],"names":["React","BlocksBoard","GameBoard","App","Component","constructor","game_board","board","handlePiece","bind","state","piece","move_options","setState","console","log","includes","spot","chosen_spot","move","piece_clicked","render"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;AACA,SAAKC,UAAL,GAAkB,IAAIJ,SAAJ,EAAlB;AACA,SAAKK,KAAL,GAAa,KAAKD,UAAL,CAAgBC,KAA7B;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,GADI;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDJ,EAAAA,WAAW,CAAEG,KAAF,EAAS;AAClB,QAAI,KAAKD,KAAL,CAAWC,KAAX,IAAoB,GAAxB,EAA4B;AAC1B,YAAMC,YAAY,GAAGD,KAAK,CAACC,YAAN,CAAmB,KAAKL,KAAxB,CAArB;AACA,WAAKM,QAAL,CAAc;AAACF,QAAAA,KAAK,EAAEA,KAAR;AAAeC,QAAAA,YAAY,EAAEA;AAA7B,OAAd,EAA0D,MAAM;AAC9DE,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,KAAvB;AACD,OAFD;AAID,KAND,MAOI;AACF,UAAI,KAAKD,KAAL,CAAWE,YAAX,CAAwBI,QAAxB,CAAiCL,KAAK,CAACM,IAAvC,CAAJ,EAAiD;AAC/C,cAAMC,WAAW,GAAG,CAAC,KAAKR,KAAL,CAAWC,KAAX,CAAiBM,IAAjB,CAAsB,CAAtB,CAAD,EAA0B,KAAKP,KAAL,CAAWC,KAAX,CAAiBM,IAAjB,CAAsB,CAAtB,CAA1B,CAApB;AACA,aAAKV,KAAL,CAAWW,WAAW,CAAC,CAAD,CAAtB,EAA2BA,WAAW,CAAC,CAAD,CAAtC,EAA2CC,IAA3C,CAAgDR,KAAK,CAACM,IAAtD;AACD;;AACD,WAAKJ,QAAL,CACE;AAACO,QAAAA,aAAa,EAAC,GAAf;AAAoBR,QAAAA,YAAY,EAAC;AAAjC,OADF;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACD,KAjBiB,CAmBpB;AACA;AACA;AACA;AACA;;AAIC;;AAEDW,EAAAA,MAAM,GAAI;AACR,wBACE;AAAA,6BACG,QAAC,WAAD;AAAa,QAAA,KAAK,EAAI,KAAKd,KAA3B;AAAkC,QAAA,WAAW,EAAI,KAAKC;AAAtD;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA/C+B;;AAkDlC,eAAeL,GAAf","sourcesContent":["\nimport React from 'react';\nimport BlocksBoard from \"./Components/BlocksBoard\"\nimport GameBoard from './Components/GameBoard';\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.game_board = new GameBoard()\n    this.board = this.game_board.board\n    this.handlePiece = this.handlePiece.bind(this)\n    this.state = {\n      piece: \" \",\n      move_options: []\n    }\n  }\n\n  handlePiece (piece) {\n    if (this.state.piece == \" \"){\n      const move_options = piece.move_options(this.board) \n      this.setState({piece: piece, move_options: move_options}, () => {\n        console.log(this.state.piece)\n      })\n        \n    }\n    else{\n      if (this.state.move_options.includes(piece.spot)){\n        const chosen_spot = [this.state.piece.spot[0],this.state.piece.spot[1]]\n        this.board[chosen_spot[0]][chosen_spot[1]].move(piece.spot)\n      }\n      this.setState(\n        {piece_clicked:\" \", move_options:[]}\n      )\n      console.log(this.state)\n    }\n    \n  //   this.setState({\n  //       piece_clicked: piece,\n  //       move_options: piece.move_options(this.board)\n  //     })\n  //   console.log(this.state)\n\n\n\n  }\n\n  render () {\n    return(\n      <div>\n         <BlocksBoard board = {this.board} handlePiece = {this.handlePiece}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}