{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Computer_Science\\\\ChessWeb1\\\\src\\\\App.js\";\nimport React from 'react';\nimport Board from \"./Components/Board\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.IsSpotInOptions = spot => {\n      for (let index = 0; index < this.state.move_options.length; index++) {\n        const element = this.state.move_options[index];\n\n        if (element[0] === spot[0] && element[1] === spot[1]) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/user/Desktop/Computer_Science/ChessWeb1/src/App.js"],"names":["React","Board","App","Component","constructor","IsSpotInOptions","spot","index","state","move_options","length","element","render"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAI;AACb;;AADa,SAOfC,eAPe,GAOIC,IAAD,IAAU;AAC1B,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAApD,EAA4DH,KAAK,EAAjE,EAAqE;AACnE,cAAMI,OAAO,GAAG,KAAKH,KAAL,CAAWC,YAAX,CAAwBF,KAAxB,CAAhB;;AACA,YAAII,OAAO,CAAC,CAAD,CAAP,KAAeL,IAAI,CAAC,CAAD,CAAnB,IAA0BK,OAAO,CAAC,CAAD,CAAP,KAAeL,IAAI,CAAC,CAAD,CAAjD,EAAsD;AACpD,iBAAO,IAAP;AACD;AACF;;AACD,aAAO,KAAP;AACD,KAfc;AAGd;;AAcDM,EAAAA,MAAM,GAAI;AACR,wBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAtB+B;;AAyBlC,eAAeV,GAAf","sourcesContent":["\r\nimport React from 'react';\r\nimport Board from \"./Components/Board\"\r\n\r\nclass App extends React.Component {\r\n  constructor () {\r\n    super()\r\n\r\n  }\r\n\r\n  \r\n\r\n  IsSpotInOptions = (spot) => {\r\n    for (let index = 0; index < this.state.move_options.length; index++) {\r\n      const element = this.state.move_options[index];\r\n      if (element[0] === spot[0] && element[1] === spot[1]) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <Board />\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}